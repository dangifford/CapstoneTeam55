#20 times number of variables states that we need 25*20=500 cases and we have 2236 so we are good
#create correlation matrix
f <- bfi_data[ , 1:25]
co <- cor(f)
corm <- as.matrix(co)
isSymmetric(corm)
#look at corrplot
require(corrplot)
corrplot(co)
#Q1 obtain the eigenvalues and eigenvectors
eigenfun <- eigen(corm)
eigenfun$values
eigenfun$vectors
scree(corm,pc=FALSE)
#with scree plot retain 7, with eigenvalue greater than 1 retain 7, retain 19 for variance cover
fa.parallel(corm, n.obs=600, fa="both", n.iter=100, show.legend=TRUE,main="Scree plot with parallel analysis")
eigenfun$values
eigenfun$vectors
#calc tot var
eigenfun$value[1]
#calc tot var
eigenfun$value[1]/25
eigenfun$value[1]/25
eigenfun$value[2]/25
eigenfun$value[3]/25
eigenfun$value[4]/25
eigenfun$value[5]/25
eigenfun$value[6]/25
eigenfun$value[7]/25
co
#Q1 obtain the eigenvalues and eigenvectors
eigenfun <- eigen(corm)
eigenfun$values
eigenfun$vectors
#with scree plot retain 6, with eigenvalue greater than 1 retain 6, retain 7 for variance cover
fa.parallel(corm, n.obs=600, fa="both", n.iter=100, show.legend=TRUE,main="Scree plot with parallel analysis")
sum(eigenfun$values[1:20]/25)
sum(eigenfun$values[1:19]/25)
sum(eigenfun$values[1:18]/25)
eigenfun$values
#Q2 run factor analysis for eigenvalues greater than 1 rule
fit <- factanal(f, 6, rotation="varimax")
print(fit, digits=2, cutoff=.3, sort=TRUE)
fit
print(fit2, digits = 3, cutoff=1.0, sort=TRUE)
print(fit, digits=2, cutoff=1.0, sort=TRUE)
.3
print(fit, digits=2, cutoff=.3, sort=TRUE)
print(fit, digits=2, sort=TRUE)
#Q3 same as above but with PROMAX rotation
fit2 <- factanal(f, 7, rotation = "promax")
print(fit, digits=2, cutoff=.3, sort=TRUE)
print(fit, digits=3, sort=TRUE)
#repeat q2 for 1-num
x<-seq(1,6)
for (val in x) {
fith <- factanal(f, val, rotation="varimax")
print(fith, digits=2, cutoff=.3, sort=TRUE)
}
print(fit, digits=3, sort=TRUE)
,
print(fit2, digits = 3, sort=TRUE)
#Q3 same as above but with PROMAX rotation
fit2 <- factanal(f, 6, rotation = "promax")
print(fit2, digits = 3, sort=TRUE)
#repeat q2 for 1-num
x<-seq(1,6)
#repeat q2 for 1-num
x<-seq(1,6)
for (val in x) {
fith <- factanal(f, val, rotation="varimax")
print(fith, digits=3, sort=TRUE)
}
#Assigment 2: Exploratory Factor Analysis
#MSDS 411
#read in the data
#install.packages("psych")
library(psych)
bfi_data2=bfi
#Examine the data
summary(bfi_data2)
#drop cases with NAs
bfi_data <- bfi_data2[complete.cases(bfi_data2),]
#20 times number of variables states that we need 25*20=500 cases and we have 2236 so we are good
#create correlation matrix
f <- bfi_data[ , 1:25]
co <- cor(f)
corm <- as.matrix(co)
isSymmetric(corm)
#look at corrplot
require(corrplot)
corrplot(co)
#Q1 obtain the eigenvalues and eigenvectors
eigenfun <- eigen(corm)
eigenfun$values
eigenfun$vectors
scree(corm,pc=FALSE)
#with scree plot retain 6, with eigenvalue greater than 1 retain 6, retain 7 for variance cover
fa.parallel(corm, n.obs=600, fa="both", n.iter=100, show.legend=TRUE,main="Scree plot with parallel analysis")
ap <- parallel(subject=nrow(f),var=ncol(f),
rep=100,cent=.05)
nS <- nScree(x=eigenfun$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
#calc tot var
eigenfun$value[1]/25
eigenfun$value[2]/25
eigenfun$value[3]/25
eigenfun$value[4]/25
eigenfun$value[5]/25
eigenfun$value[6]/25
eigenfun$value[7]/25
#Q2 run factor analysis for eigenvalues greater than 1 rule
fit <- factanal(f, 6, rotation="varimax")
print(fit, digits=3, sort=TRUE)
# plot factor 1 by factor 2
load <- fit$loadings[,1:2]
plot(load,type="n") # set up plot
text(load,labels=names(f),cex=.7) # add variable names
#Q3 same as above but with PROMAX rotation
fit2 <- factanal(f, 6, rotation = "promax")
print(fit2, digits = 3, sort=TRUE)
#repeat q2 for 1-num
x<-seq(1,6)
for (val in x) {
fith <- factanal(f, val, rotation="varimax")
print(fith, digits=3, sort=TRUE)
}
fitc <- factanal(f, 1, rotation="varimax")
View(fith)
View(fitc)
fitc[["loadings"]]
#read in the data
#install.packages("psych")
library(psych)
bfi_data2=bfi
#Examine the data
summary(bfi_data2)
#drop cases with NAs
bfi_data <- bfi_data2[complete.cases(bfi_data2),]
#20 times number of variables states that we need 25*20=500 cases and we have 2236 so we are good
#create correlation matrix
f <- bfi_data[ , 1:25]
co <- cor(f)
corm <- as.matrix(co)
isSymmetric(corm)
#look at corrplot
require(corrplot)
corrplot(co)
#Q1 obtain the eigenvalues and eigenvectors
eigenfun <- eigen(corm)
eigenfun$values
eigenfun$vectors
scree(corm,pc=FALSE)
#with scree plot retain 6, with eigenvalue greater than 1 retain 6, retain 7 for variance cover
fa.parallel(corm, n.obs=600, fa="both", n.iter=100, show.legend=TRUE,main="Scree plot with parallel analysis")
ap <- parallel(subject=nrow(f),var=ncol(f),
rep=100,cent=.05)
nS <- nScree(x=eigenfun$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
#calc tot var
eigenfun$value[1]/25
eigenfun$value[2]/25
eigenfun$value[3]/25
eigenfun$value[4]/25
eigenfun$value[5]/25
eigenfun$value[6]/25
eigenfun$value[7]/25
#Q2 run factor analysis for eigenvalues greater than 1 rule
fit <- factanal(f, 6, rotation="varimax")
print(fit, digits=3, sort=TRUE)
# plot factor 1 by factor 2
load <- fit$loadings[,1:2]
plot(load,type="n") # set up plot
text(load,labels=names(f),cex=.7) # add variable names
#Q3 same as above but with PROMAX rotation
fit2 <- factanal(f, 6, rotation = "promax")
print(fit2, digits = 3, sort=TRUE)
#repeat q2 for 1-num
x<-seq(1,19)
for (val in x) {
fith <- factanal(f, val, rotation="varimax")
print(fith, digits=3, sort=TRUE)
}
#Q6 fit the 5-factor model
fit2 <- factanal(f, 5, rotation = "promax")
#Q6 fit the 5-factor model
fit2 <- factanal(f, 5, rotation = "varimax")
print(fit2, digits = 3, cutoff=0.3, sort=TRUE)
View(fit2)
factor_scores <- factor.scores(f,fit2)
View(factor_scores)
fs <- factor_scores$scores
bf2 <- cbind(bfi_data,fs)
View(bf2)
View(bf2)
#do anova
a_gen <- aov(gender~Factor1+Factor2+Factor3+Factor4+Factor5, data=bf2)
summary(a_gen)
boxplot(bf2$Factor1~bf2$gender)
boxplot(bf2$Factor1~bf2$gender,title="Boxplot of Factor 1 by Gender",col=c("blue","red"))
boxplot(bf2$Factor1~bf2$gender,main="Boxplot of Factor 1 by Gender",col=c("blue","red"))
par(mfrow=c(2,3))
boxplot(bf2$Factor1~bf2$gender,main="Boxplot of Factor 1 by Gender",col=c("blue","red"))
boxplot(bf2$Factor2~bf2$gender,main="Boxplot of Factor 2 by Gender",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$gender,main="Boxplot of Factor 3 by Gender",col=c("blue","red"))
boxplot(bf2$Factor4~bf2$gender,main="Boxplot of Factor 4 by Gender",col=c("blue","red"))
boxplot(bf2$Factor5~bf2$gender,main="Boxplot of Factor 5 by Gender",col=c("blue","red"))
par(mfrow=c(3,2))
boxplot(bf2$Factor1~bf2$gender,main="Boxplot of Factor 1 by Gender",col=c("blue","red"))
boxplot(bf2$Factor2~bf2$gender,main="Boxplot of Factor 2 by Gender",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$gender,main="Boxplot of Factor 3 by Gender",col=c("blue","red"))
boxplot(bf2$Factor4~bf2$gender,main="Boxplot of Factor 4 by Gender",col=c("blue","red"))
boxplot(bf2$Factor5~bf2$gender,main="Boxplot of Factor 5 by Gender",col=c("blue","red"))
View(bf2)
par(mfrow=c(2,3))
boxplot(bf2$Factor1~bf2$gender,main="Boxplot of Factor 1 by Gender",col=c("blue","red"))
boxplot(bf2$Factor2~bf2$gender,main="Boxplot of Factor 2 by Gender",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$gender,main="Boxplot of Factor 3 by Gender",col=c("blue","red"))
boxplot(bf2$Factor4~bf2$gender,main="Boxplot of Factor 4 by Gender",col=c("blue","red"))
boxplot(bf2$Factor5~bf2$gender,main="Boxplot of Factor 5 by Gender",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$gender,main="Boxplot of Factor 3 \nby Gender",col=c("blue","red"))
par(mfrow=c(2,3))
boxplot(bf2$Factor1~bf2$gender,main="Boxplot of Factor 1 \nby Gender",col=c("blue","red"))
boxplot(bf2$Factor2~bf2$gender,main="Boxplot of Factor 2 \nby Gender",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$gender,main="Boxplot of Factor 3 \nby Gender",col=c("blue","red"))
boxplot(bf2$Factor4~bf2$gender,main="Boxplot of Factor 4 \nby Gender",col=c("blue","red"))
boxplot(bf2$Factor5~bf2$gender,main="Boxplot of Factor 5 \nby Gender",col=c("blue","red"))
boxplot(bf2$Factor1~bf2$education,main="Boxplot of Factor 1 \nby education",col=c("blue","red"))
boxplot(bf2$Factor2~bf2$education,main="Boxplot of Factor 2 \nby education",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$education,main="Boxplot of Factor 3 \nby education",col=c("blue","red"))
boxplot(bf2$Factor4~bf2$education,main="Boxplot of Factor 4 \nby education",col=c("blue","red"))
boxplot(bf2$Factor5~bf2$education,main="Boxplot of Factor 5 \nby education",col=c("blue","red"))
par(mfrow=c(2,3))
boxplot(bf2$Factor1~bf2$education,main="Boxplot of Factor 1 \nby education",col=c("blue","red"))
boxplot(bf2$Factor2~bf2$education,main="Boxplot of Factor 2 \nby education",col=c("blue","red"))
boxplot(bf2$Factor3~bf2$education,main="Boxplot of Factor 3 \nby education",col=c("blue","red"))
boxplot(bf2$Factor4~bf2$education,main="Boxplot of Factor 4 \nby education",col=c("blue","red"))
boxplot(bf2$Factor5~bf2$education,main="Boxplot of Factor 5 \nby education",col=c("blue","red"))
plot(bf2$Factor5~bf2$age)
par(mfrow=c(2,3))
plot(bf2$Factor1~bf2$age,main="Boxplot of Factor 1 \nby age")
plot(bf2$Factor2~bf2$age,main="Boxplot of Factor 2 \nby age")
plot(bf2$Factor3~bf2$age,main="Boxplot of Factor 3 \nby age")
plot(bf2$Factor4~bf2$age,main="Boxplot of Factor 4 \nby age")
plot(bf2$Factor5~bf2$age,main="Boxplot of Factor 5 \nby age")
par(mfrow=c(2,3))
plot(bf2$Factor1~bf2$age,main="Boxplot of Factor 1 \nby age")
legend(x='bottomright', legend=paste('Cor =',round(cor(bf2$age, bf2$Factor1),2)))
par(mfrow=c(2,3))
plot(bf2$Factor1~bf2$age,main="Boxplot of Factor 1 \nby age")
legend(x='bottomright', legend=paste('Cor =',round(cor(bf2$age, bf2$Factor1),2)))
plot(bf2$Factor2~bf2$age,main="Boxplot of Factor 2 \nby age")
legend(x='bottomright', legend=paste('Cor =',round(cor(bf2$age, bf2$Factor2),2)))
plot(bf2$Factor3~bf2$age,main="Boxplot of Factor 3 \nby age")
legend(x='bottomright', legend=paste('Cor =',round(cor(bf2$age, bf2$Factor3),2)))
plot(bf2$Factor4~bf2$age,main="Boxplot of Factor 4 \nby age")
legend(x='bottomright', legend=paste('Cor =',round(cor(bf2$age, bf2$Factor4),2)))
plot(bf2$Factor5~bf2$age,main="Boxplot of Factor 5 \nby age")
legend(x='bottomright', legend=paste('Cor =',round(cor(bf2$age, bf2$Factor5),2)))
#do anova
a_gen <- aov(gender~Factor1+Factor2+Factor3+Factor4+Factor5, data=bf2)
summary(a_gen)
a_gen <- aov(education~Factor1+Factor2+Factor3+Factor4+Factor5, data=bf2)
summary(a_gen)
TukeyHSD(a_gen, which="Factor5")
#do anova
a_gen <- aov(Factor1~gender, data=bf2)
summary(a_gen)
a_gen <- aov(Factor1~education, data=bf2)
summary(a_gen)
a_gen <- aov(Factor5~education, data=bf2)
summary(a_gen)
TukeyHSD(a_gen, which="education")
#do anova
a_gen <- aov(Factor1~gender, data=bf2)
summary(a_gen)
#do anova
h <- function(x1,x2) {
f <- lm(x1~x2,data=bf2)
summary(f)
}
h(Factor1,gender)
#do anova
h <- function(x1,x2) {
f <- lm(substitue(x1)~substitue(x2),data=bf2)
summary(f)
}
h(Factor1,gender)
#do anova
h <- function(x1,x2) {
f <- lm(substitute(x1)~substitute(x2),data=bf2)
summary(f)
}
h(Factor1,gender)
#do anova
h <- function(df, x1,x2) {
f <- lm(substitute(x1)~substitute(x2),data=df)
summary(f)
}
h(bf2,Factor1,gender)
#do anova
h <- function(df, x1,x2) {
f <- lm(df$x1~df$x2)
summary(f)
}
h(bf2,"Factor1","gender")
summary(f)
#do anova
f<-lm(Factor1~gender,data=bf2)
summary(f)
f<-lm(Factor1~gender,data=bf2)
summary(f)
f<-lm(Factor2~gender,data=bf2)
summary(f)
f<-lm(Factor3~gender,data=bf2)
summary(f)
f<-lm(Factor4~gender,data=bf2)
summary(f)
f<-lm(Factor5~gender,data=bf2)
summary(f)
a_ed <-anova(education~Factor1+Factor2+Factor3+Factor4+Factor5, data=bf2)
a_ed <-anova(education~Factor1+Factor2+Factor3+Factor4+Factor5, data=bf2)
a_ed <-aov(education~Factor1+Factor2+Factor3+Factor4+Factor5, data=bf2)
summary(a_ed)
f<-lm(Factor1~education,data=bf2)
summary(f)
f<-lm(Factor1~education,data=bf2)
summary(f)
f<-lm(Factor1~education,data=bf2)
summary(f)
f<-lm(Factor1~education,data=bf2)
summary(f)
f<-lm(Factor1~education,data=bf2)
summary(f)
f<-lm(Factor1~education,data=bf2)
summary(f)
f<-lm(Factor2~education,data=bf2)
summary(f)
f<-lm(Factor3~education,data=bf2)
summary(f)
f<-lm(Factor4~education,data=bf2)
summary(f)
f<-lm(Factor5~education,data=bf2)
summary(f)
f<-lm(Factor1~age,data=bf2)
summary(f)
f<-lm(Factor2~age,data=bf2)
summary(f)
f<-lm(Factor3~age,data=bf2)
summary(f)
f<-lm(Factor4~age,data=bf2)
summary(f)
f<-lm(Factor5~age,data=bf2)
summary(f)
library(ggplot2)
setwd("~/Documents/MSDS498/CapstoneTeam55")
#delta forest
df <- read.csv("country_pred_delta_forest.csv")
#delta forest
df <- read.csv("./Data/country_pred_delta_forest.csv")
View(df)
dfd16 <- subset(df,yr==2016)
#boxplots for categorical data
ggplot(dfd16, aex(x=IncomeGroup.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Boxplot of 2015-16 Change in Forest Area by Income Group")
#boxplots for categorical data
ggplot(dfd16, aes(x=IncomeGroup.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Boxplot of 2015-16 Change in Forest Area by Income Group")
#boxplots for categorical data
ggplot(df, aes(x=IncomeGroup.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Income Group")
p <- ggplot(dfd16, aes(x=delta_forest_area)) +
geom_histogram(binwidth = 0.01, fill="#69b3a2", alpha=0.9) +
ggtitle("Histogram of 2015-16 Change in Forest Area") +
theme_light() +
theme (plot.title = element_text(size=15))
#boxplots for categorical data
ggplot(df, aes(x=IncomeGroup.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Income Group")
ggplot(df, aes(x=Sub.Regions.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Sub Region")
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Sub.Regions.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Sub Region")
#boxplots for categorical data
ggplot(df, aes(x=IncomeGroup.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Income Group") +
theme_light() +
theme (plot.title = element_text(size=15))
ggplot(df, aes(x=Sub.Regions.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Sub Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
View(df)
ggplot(df, aes(x=Commodity.driven.deforestation.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Commodity Driven Deforestation") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Forestry.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Forestry") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Wildfire.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Wildfire") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Shifting.agriculture.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Shifting.agriculture") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
#convert binaries to factors for plotting
df$Commodity.driven.deforestation <- ifelse(df$Commodity.driven.deforestation.x==1,"Yes","No")
df$Forestry <- ifelse(df$Forestry.x==1,"Yes","No")
df$Wildfire <- ifelse(df$Wildfire.x==1,"Yes","No")
df$Shifting.agriculture <- ifelse(df$Shifting.agriculture.x==1,"Yes","No")
ggplot(df, aes(x=Commodity.driven.deforestation, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Commodity Driven Deforestation") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Forestry, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Forestry") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Wildfire, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Wildfire") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=Shifting.agriculture, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Shifting.agriculture") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
df$topf <- ifelse(df$forestgroup==1,"High",ifelse(df$forestgroup==2,"Mid",ifelse(df$forestgroup==3,"Low","Other")))
df$topp <- ifelse(df$popgroup==1,"High",ifelse(df$popgroup==2,"Mid",ifelse(df$popgroup==3,"Low","Other")))
df$topg <- ifelse(df$gdpgroup==1,"High",ifelse(df$gdpgroup==2,"Mid",ifelse(df$gdpgroup==3,"Low","Other")))
ggplot(df, aes(x=topf, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Percent Forest grouping") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=topp, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Population grouping") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=topf, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Percent Forest grouping") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
dfd16 <- subset(df,yr==2016)
ggplot(dfd16, aes(x=topf, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Percent Forest grouping") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(dfd16, aes(x=topp, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Population grouping") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(dfd16, aes(x=topf, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by GDP grouping") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(dfd16, aes(x=Sub.Regions.x))  +
geom_barchart(fill="#69b3a2",  alpha=0.9) +
ggtitle("Barchart of Country Sub-Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(dfd16, aes(x=Sub.Regions.x))  +
geom_bar(fill="#69b3a2",  alpha=0.9) +
ggtitle("Barchart of Country Sub-Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(dfd16, aes(x=Sub.Regions.x))  +
geom_bar(fill="#69b3a2",  alpha=0.9) +
ggtitle("Barchart of Country Sub-Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dfd16, aes(x=Sub.Regions.x))  +
geom_bar(fill="#69b3a2",  alpha=0.9) +
ggtitle("Barchart of Country Sub-Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 660, hjust = 1))
ggplot(dfd16, aes(x=Sub.Regions.x))  +
geom_bar(fill="#69b3a2",  alpha=0.9) +
ggtitle("Barchart of Country Sub-Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(df, aes(x=Sub.Regions.x, y=delta_forest_area))  +
geom_boxplot(fill="#69b3a2",  alpha=0.9) +
ggtitle("Boxplot of Change in Forest Area by Sub-Region") +
theme_light() +
theme (plot.title = element_text(size=15), axis.text.x = element_text(angle = 60, hjust = 1))
